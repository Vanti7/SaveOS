# Script PowerShell pour configurer SaveOS sur Windows

Write-Host "üöÄ Configuration de SaveOS - Syst√®me de sauvegarde centralis√©" -ForegroundColor Green
Write-Host "=============================================================" -ForegroundColor Green

# V√©rifier que Docker est install√©
if (!(Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker n'est pas install√©. Veuillez l'installer d'abord." -ForegroundColor Red
    exit 1
}

if (!(Get-Command docker-compose -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker Compose n'est pas install√©. Veuillez l'installer d'abord." -ForegroundColor Red
    exit 1
}

# G√©n√©rer les certificats TLS
Write-Host "üîê G√©n√©ration des certificats TLS..." -ForegroundColor Yellow

$certDir = "certs"
$certFile = "$certDir\cert.pem"
$keyFile = "$certDir\key.pem"

if (!(Test-Path $certDir)) {
    New-Item -ItemType Directory -Path $certDir | Out-Null
}

# V√©rifier si OpenSSL est disponible
if (Get-Command openssl -ErrorAction SilentlyContinue) {
    Write-Host "G√©n√©ration de la cl√© priv√©e..." -ForegroundColor Gray
    openssl genrsa -out $keyFile 2048

    Write-Host "G√©n√©ration du certificat self-signed..." -ForegroundColor Gray
    openssl req -new -x509 -key $keyFile -out $certFile -days 365 -subj "/C=FR/ST=France/L=Paris/O=SaveOS/OU=IT/CN=localhost"
    
    Write-Host "‚úÖ Certificats g√©n√©r√©s avec succ√®s" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  OpenSSL non trouv√©. Cr√©ation de certificats factices..." -ForegroundColor Yellow
    "-----BEGIN PRIVATE KEY-----" | Out-File -FilePath $keyFile -Encoding ASCII
    "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC..." | Out-File -FilePath $keyFile -Append -Encoding ASCII
    "-----END PRIVATE KEY-----" | Out-File -FilePath $keyFile -Append -Encoding ASCII
    
    "-----BEGIN CERTIFICATE-----" | Out-File -FilePath $certFile -Encoding ASCII
    "MIIDXTCCAkWgAwIBAgIJAKoK/OvH0dJNMA0GCSqGSIb3DQEBCwUA..." | Out-File -FilePath $certFile -Append -Encoding ASCII
    "-----END CERTIFICATE-----" | Out-File -FilePath $certFile -Append -Encoding ASCII
}

# Arr√™ter les conteneurs existants s'ils existent
Write-Host "üõë Arr√™t des conteneurs existants..." -ForegroundColor Yellow
docker-compose down -v 2>$null

# Construire les images
Write-Host "üî® Construction des images Docker..." -ForegroundColor Yellow
docker-compose build

# D√©marrer les services
Write-Host "üöÄ D√©marrage des services..." -ForegroundColor Yellow
docker-compose up -d

# Attendre que les services soient pr√™ts
Write-Host "‚è≥ Attente du d√©marrage des services..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# V√©rifier le statut des services
Write-Host "üîç V√©rification du statut des services..." -ForegroundColor Yellow
docker-compose ps

# V√©rifier la sant√© de l'API
Write-Host "ü©∫ Test de sant√© de l'API..." -ForegroundColor Yellow
$maxAttempts = 10
$attempt = 1

do {
    try {
        $response = Invoke-WebRequest -Uri "https://localhost:8000/health" -SkipCertificateCheck -ErrorAction Stop
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ API SaveOS accessible sur https://localhost:8000" -ForegroundColor Green
            break
        }
    }
    catch {
        Write-Host "‚è≥ Tentative $attempt/$maxAttempts - API pas encore pr√™te..." -ForegroundColor Yellow
        Start-Sleep -Seconds 5
        $attempt++
    }
} while ($attempt -le $maxAttempts)

# Afficher les informations de connexion
Write-Host ""
Write-Host "üéâ SaveOS d√©marr√© avec succ√®s!" -ForegroundColor Green
Write-Host "================================" -ForegroundColor Green
Write-Host "üìä Services disponibles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Interface Web:  http://localhost:3000" -ForegroundColor White
Write-Host "   ‚Ä¢ API SaveOS:     https://localhost:8000" -ForegroundColor White
Write-Host "   ‚Ä¢ PostgreSQL:     localhost:5432 (saveos/saveos123)" -ForegroundColor White
Write-Host "   ‚Ä¢ Redis:          localhost:6379" -ForegroundColor White
Write-Host "   ‚Ä¢ MinIO:          http://localhost:9001 (saveos/saveos123456)" -ForegroundColor White
Write-Host ""
Write-Host "üîß √âtapes suivantes:" -ForegroundColor Cyan
Write-Host "   1. Ouvrir l'interface web: http://localhost:3000" -ForegroundColor White
Write-Host "   2. Aller dans 'T√©l√©chargements' pour installer des agents" -ForegroundColor White
Write-Host "   3. T√©l√©charger et installer un agent sur vos machines" -ForegroundColor White
Write-Host "   4. Surveiller les sauvegardes depuis l'interface" -ForegroundColor White
Write-Host ""
Write-Host "üìù Logs des services:" -ForegroundColor Cyan
Write-Host "   docker-compose logs -f" -ForegroundColor White
Write-Host ""
Write-Host "üõë Pour arr√™ter SaveOS:" -ForegroundColor Cyan
Write-Host "   docker-compose down" -ForegroundColor White